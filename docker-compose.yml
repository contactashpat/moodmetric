version: '3.8'

services:
  # API Gateway
  api-gateway:
    build:
      context: ./apps/api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/moodmetric
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-jwt-secret-dev
    depends_on:
      - postgres
      - redis
    volumes:
      - ./apps/api-gateway:/app
      - /app/node_modules

  # Backend API
  backend-api:
    build:
      context: ./apps/backend-api
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/moodmetric
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-jwt-secret-dev
    depends_on:
      - postgres
      - redis
    volumes:
      - ./apps/backend-api:/app
      - /app/node_modules

  # Dashboard
  dashboard:
    build:
      context: ./apps/dashboard
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - NEXT_PUBLIC_APP_URL=http://localhost:3002
    depends_on:
      - api-gateway
    volumes:
      - ./apps/dashboard:/app
      - /app/node_modules

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=moodmetric
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3003:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources

  # Sentry (Error Tracking)
  sentry:
    image: getsentry/sentry:latest
    ports:
      - "9000:9000"
    environment:
      - SENTRY_SECRET_KEY=your-sentry-secret-key
      - SENTRY_POSTGRES_HOST=postgres
      - SENTRY_POSTGRES_DBNAME=sentry
      - SENTRY_REDIS_HOST=redis
    depends_on:
      - postgres
      - redis

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data: 